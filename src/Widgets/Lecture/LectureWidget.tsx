import { useNavigate } from "react-router";
import TextLecture from "../../Entities/LectureEntities/TextLecture";
import './Lecture.scss';

const LectureWidget = () => {

    const navigate = useNavigate();

    const lecture = {
        title: 'JavaScript для начинающих',
        text:  `В современном мире информационных технологий, JavaScript становится неотъемлемой частью веб-разработки и приобретает все большую популярность. Он является универсальным языком программирования, который может быть использован для различных целей, начиная от создания динамических и интерактивных веб-страниц, до разработки сложных веб-приложений и игр.

        JavaScript обладает множеством возможностей и особенностей, которые делают его мощным инструментом для разработчиков. Возможность работать с DOM (Document Object Model) позволяет изменять и манипулировать содержимым веб-страницы, делая ее динамической и реактивной. Кроме того, JavaScript поддерживает асинхронное программирование, что позволяет выполнять операции без блокирования основного потока выполнения.
        
        Благодаря широкой поддержке и активному сообществу разработчиков, JavaScript постоянно развивается и совершенствуется. Появление новых стандартов и возможностей, таких как ECMAScript 6 (ES6) и новые API, делает его еще более мощным и гибким.
        
        Однако, такое обширное использование JavaScript также влечет за собой некоторые проблемы. Одной из них является поддержка различных браузеров, так как каждый браузер может интерпретировать код JavaScript по-разному. Для решения этой проблемы часто используются транспиляторы и полифиллы, которые обеспечивают совместимость кода с разными версиями браузеров.
        
        Также, из-за своей широкой популярности, JavaScript стал объектом внимания злоумышленников, и в нем могут быть найдены уязвимости, которые могут быть использованы для атак на веб-приложения. Поэтому безопасность является одним из важных аспектов при разработке веб-приложений на JavaScript.
        
        В целом, JavaScript - это мощный, гибкий и универсальный язык программирования, который открывает огромные возможности для разработки современных и инновационных веб-приложений. Он продолжает развиваться и становиться все более важным инструментом для разработчиков по всему миру.
        В современном мире информационных технологий, JavaScript становится неотъемлемой частью веб-разработки и приобретает все большую популярность. Он является универсальным языком программирования, который может быть использован для различных целей, начиная от создания динамических и интерактивных веб-страниц, до разработки сложных веб-приложений и игр.

JavaScript обладает множеством возможностей и особенностей, которые делают его мощным инструментом для разработчиков. Возможность работать с DOM (Document Object Model) позволяет изменять и манипулировать содержимым веб-страницы, делая ее динамической и реактивной. Кроме того, JavaScript поддерживает асинхронное программирование, что позволяет выполнять операции без блокирования основного потока выполнения.

Благодаря широкой поддержке и активному сообществу разработчиков, JavaScript постоянно развивается и совершенствуется. Появление новых стандартов и возможностей, таких как ECMAScript 6 (ES6) и новые API, делает его еще более мощным и гибким.

Однако, такое обширное использование JavaScript также влечет за собой некоторые проблемы. Одной из них является поддержка различных браузеров, так как каждый браузер может интерпретировать код JavaScript по-разному. Для решения этой проблемы часто используются транспиляторы и полифиллы, которые обеспечивают совместимость кода с разными версиями браузеров.

Также, из-за своей широкой популярности, JavaScript стал объектом внимания злоумышленников, и в нем могут быть найдены уязвимости, которые могут быть использованы для атак на веб-приложения. Поэтому безопасность является одним из важных аспектов при разработке веб-приложений на JavaScript.

В целом, JavaScript - это мощный, гибкий и универсальный язык программирования, который открывает огромные возможности для разработки современных и инновационных веб-приложений. Он продолжает развиваться и становиться все более важным инструментом для разработчиков по всему миру.`
    };


    return (
        <div className="lectureContainer">
            <TextLecture title={lecture.title} text={lecture.text} />
            <div>
                <button onClick={() => navigate(-1)}>
                    Назад
                </button>
            </div>
        </div>
    );
}

export default LectureWidget;